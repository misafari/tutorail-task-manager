{"version":3,"sources":["component/ui-custom/Panel.tsx","component/NewTask.tsx","component/Task.tsx","component/ActiveTaskList.tsx","component/DoneTaskList.tsx","component/TaskApp.tsx","RootComponent.tsx","index.tsx"],"names":["Panel","title","subheader","children","Card","style","marginTop","CardHeader","Divider","CardContent","Grid","container","spacing","NewTask","addTop","addBottom","useState","subject","setSubject","item","xs","sm","md","TextField","onChange","e","target","value","id","fullWidth","label","name","variant","Button","onClick","alert","size","color","useStyles","makeStyles","root","minWidth","margin","Task","task","deleteTasks","classes","taskStyle","isDone","className","background","minHeight","Typography","component","CardActions","ActiveTaskList","tasks","deleteFunction","filter","map","TaskApp","setTasks","useEffect","Math","floor","random","todos","index","findIndex","DoneTaskList","RootComponent","Fragment","CssBaseline","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faa18386.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Card, CardHeader, Divider, Grid, CardContent\n} from '@material-ui/core';\n\nexport interface PanelProps {\n    title?: string | null;\n    subheader?: string | null;\n    children: any;\n}\n\nconst Panel: React.FC<PanelProps> = ({ title, subheader, children }) => {\n    return <Card style={{ marginTop: '2%' }}>\n        <CardHeader title={title ? title : ''} subheader={subheader ? subheader : ''} />\n        <Divider />\n        <CardContent>\n            <Grid container spacing={2}>\n                {children}\n            </Grid>\n        </CardContent>\n    </Card>;\n}\n\nexport default Panel;\n","import React, {useState} from \"react\";\nimport {TextField, Button, Grid} from '@material-ui/core';\nimport Panel from \"./ui-custom/Panel\";\n\ninterface NewTaskProps {\n    addTop: any\n    addBottom: any\n}\n\nconst NewTask: React.FC<NewTaskProps> = ({ addTop, addBottom }) => {\n    const [subject, setSubject] = useState<string>(\"\")\n\n    const addNewTop = () => {\n        if (subject === '') {\n            alert('Subject is empty')\n        } else {\n            addTop(subject)\n            setSubject('')\n        }\n    }\n\n    const addNewBottom = () => {\n        if (subject === '') {\n            alert('Subject is empty')\n        } else {\n            addBottom(subject)\n            setSubject('')\n        }\n    }\n\n    return (\n        <Panel title=\"Add New Task\">\n            <Grid item xs={12} sm={12} md={6}>\n                <TextField\n                    onChange={e => setSubject(e.target.value)}\n                    value={subject}\n                    id=\"new-task-info\"\n                    fullWidth\n                    label=\"Task Subject\"\n                    name=\"task-subject\"\n                    variant=\"outlined\"/>\n            </Grid>\n            <Grid item xs={12} sm={12} md={2}>\n                <Button\n                    onClick={addNewTop}\n                    variant=\"contained\"\n                    size=\"medium\"\n                    color=\"primary\"\n                >\n                    Add At Start\n                </Button>\n            </Grid>\n            <Grid item xs={12} sm={12} md={3}>\n                <Button onClick={addNewBottom} variant=\"contained\">\n                    Add At End\n                </Button>\n            </Grid>\n        </Panel>\n    )\n}\n\nexport default NewTask;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\ninterface TaskProps {\n    task: TaskStruct\n    deleteTasks: any | null\n}\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        margin: '0 5px',\n    },\n});\n\nconst Task: React.FC<TaskProps> = ({task, deleteTasks}) => {\n    const classes = useStyles();\n\n    const taskStyle = task.isDone ? 'orangered' : 'lightgreen'\n\n    return(\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent style={{background: taskStyle, minHeight: '100px'}}>\n                <Typography variant=\"body2\" component=\"p\">\n                    {task.subject}\n                </Typography>\n            </CardContent>\n            {\n                !task.isDone ? <CardActions style={{background: \"gray\"}}>\n                    <Button onClick={e => deleteTasks(task.id)} size=\"small\">Done</Button>\n                </CardActions> : null\n            }\n\n        </Card>\n    )\n}\n\nexport default Task","import React from \"react\";\nimport Panel from \"./ui-custom/Panel\";\nimport Task from \"./Task\";\n\n\ninterface TaskListProps {\n    tasks: TaskStruct[]\n    deleteFunction: any | null\n}\n\nconst ActiveTaskList: React.FC<TaskListProps> = ({tasks, deleteFunction}) => {\n    return (\n        <Panel title=\"Tasks\" subheader=\"Active Tasks\">\n            {tasks.filter(task => !task.isDone).map((task: TaskStruct) =>\n                <Task key={task.id} task={task} deleteTasks={deleteFunction} />\n            )}\n        </Panel>\n    )\n}\n\nexport default ActiveTaskList","import React from \"react\";\nimport Panel from \"./ui-custom/Panel\";\nimport Task from \"./Task\";\n\n\ninterface TaskListProps {\n    tasks: TaskStruct[]\n}\n\nconst ActiveTaskList: React.FC<TaskListProps> = ({tasks}) => {\n    return (\n        <Panel title=\"Tasks\" subheader=\"Done Tasks\">\n            {tasks.filter(task => task.isDone).map((task: TaskStruct) =>\n                <Task key={task.id} task={task} deleteTasks={null}/>\n            )}\n        </Panel>\n    )\n}\n\nexport default ActiveTaskList","import React, {useEffect, useState} from \"react\";\nimport NewTask from \"./NewTask\";\nimport ActiveTaskList from \"./ActiveTaskList\";\nimport DoneTaskList from \"./DoneTaskList\";\n\nconst TaskApp: React.FC<any> = () => {\n    const [tasks, setTasks] = useState<TaskStruct[]>([])\n\n    const addNewItemTop = (subject: string) => {\n        const task: TaskStruct = {\n            id: Math.floor(Math.random() * 101),\n            subject: subject,\n            isDone: false\n        };\n\n        setTasks([task, ...tasks])\n    }\n\n    const doneTask = (id: number) => {\n        const todos = [...tasks];\n        const index = todos.findIndex(task => task.id === id)\n        todos[index].isDone = true\n\n        setTasks(todos)\n    }\n\n    const addNewItemBottom = (subject: string) => {\n        const task: TaskStruct = {\n            id: Math.floor(Math.random() * 101),\n            subject: subject,\n            isDone: false\n        };\n\n        setTasks([...tasks, task])\n    }\n\n    useEffect(() =>\n        setTasks([\n                {\n                    id: Math.floor(Math.random() * 101),\n                    subject: \"Doing homeworks\",\n                    isDone: true\n                },\n                {\n                    id: Math.floor(Math.random() * 101),\n                    subject: \"Drinking cups of coffee\",\n                    isDone: false\n                },\n                {\n                    id: Math.floor(Math.random() * 101),\n                    subject: \"Listening to ChannelB\",\n                    isDone: false\n                }\n            ]\n        ), []\n    )\n\n    return (\n        <>\n            <NewTask addTop={addNewItemTop} addBottom={addNewItemBottom}/>\n            <ActiveTaskList tasks={tasks} deleteFunction={doneTask}/>\n            <DoneTaskList tasks={tasks}/>\n        </>\n    )\n}\n\nexport default TaskApp","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport TaskApp from \"./component/TaskApp\";\n\nfunction RootComponent() {\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <Container maxWidth=\"xl\">\n                <TaskApp/>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default RootComponent;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RootComponent from './RootComponent';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootComponent />\n  </React.StrictMode>,\n  document.getElementById('roninam')\n);\n"],"sourceRoot":""}